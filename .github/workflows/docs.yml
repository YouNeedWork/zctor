name: Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install markdown

    - name: Generate documentation
      run: |
        python3 docs/generate_docs.py src docs
        python3 docs/generate_book.py docs -o docs/zctor-complete-book.md

    - name: Generate HTML documentation
      run: |
        python3 -c "
        import markdown
        import os
        
        # Read the complete book
        with open('docs/zctor-complete-book.md', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # Convert to HTML with extensions
        md = markdown.Markdown(extensions=['toc', 'tables', 'fenced_code'])
        html_content = md.convert(content)
        
        # Create a complete HTML page
        html_template = '''<!DOCTYPE html>
        <html lang=\"en\">
        <head>
            <meta charset=\"UTF-8\">
            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">
            <title>zctor Documentation</title>
            <style>
                body {{ 
                    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif; 
                    line-height: 1.6; 
                    max-width: 1200px; 
                    margin: 0 auto; 
                    padding: 20px;
                    color: #333;
                }}
                h1, h2, h3, h4, h5, h6 {{ color: #2c3e50; }}
                pre {{ 
                    background-color: #f8f9fa; 
                    padding: 15px; 
                    border-radius: 5px; 
                    overflow-x: auto;
                    border-left: 4px solid #007acc;
                }}
                code {{ 
                    background-color: #f8f9fa; 
                    padding: 2px 4px; 
                    border-radius: 3px; 
                    font-family: \"Monaco\", \"Menlo\", \"Ubuntu Mono\", monospace;
                }}
                pre code {{ background-color: transparent; padding: 0; }}
                blockquote {{ 
                    border-left: 4px solid #ddd; 
                    padding-left: 15px; 
                    margin-left: 0; 
                    color: #666;
                }}
                table {{ 
                    border-collapse: collapse; 
                    width: 100%; 
                    margin: 20px 0;
                }}
                th, td {{ 
                    border: 1px solid #ddd; 
                    padding: 12px; 
                    text-align: left; 
                }}
                th {{ background-color: #f2f2f2; }}
                .toc {{ 
                    background-color: #f8f9fa; 
                    padding: 20px; 
                    border-radius: 5px; 
                    margin: 20px 0;
                }}
                a {{ color: #007acc; text-decoration: none; }}
                a:hover {{ text-decoration: underline; }}
            </style>
        </head>
        <body>
            <header>
                <h1>ðŸŽ­ zctor Documentation</h1>
                <p>A lightweight, high-performance actor framework for Zig</p>
                <p><a href=\"https://github.com/YouNeedWork/zctor\">ðŸ“– View on GitHub</a></p>
            </header>
            <main>
                {content}
            </main>
            <footer style=\"margin-top: 50px; padding-top: 20px; border-top: 1px solid #eee; color: #666; text-align: center;\">
                <p>Generated from zctor documentation â€¢ <a href=\"https://github.com/YouNeedWork/zctor\">Source Code</a></p>
            </footer>
        </body>
        </html>'''.format(content=html_content)
        
        # Ensure docs directory exists
        os.makedirs('docs', exist_ok=True)
        
        # Write HTML file
        with open('docs/index.html', 'w', encoding='utf-8') as f:
            f.write(html_template)
        
        print('Generated docs/index.html')
        "

    - name: Setup Pages
      uses: actions/configure-pages@v4
      if: github.ref == 'refs/heads/main'

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      if: github.ref == 'refs/heads/main'
      with:
        path: 'docs'

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4